KEYWORD class
IDENTIFIER test
LEFT_BRACE {
VTYPE int
IDENTIFIER main
LEFT_PAREN (
VTYPE String
IDENTIFIER args
RIGHT_PAREN )
LEFT_BRACE {
VTYPE int
IDENTIFIER _aa_a
ASSIGNMENT_OPERATOR =
SIGNED_INTEGER 0
TERMINATING_SYMBOL ;
VTYPE char
IDENTIFIER b_b123
ASSIGNMENT_OPERATOR =
SINGLE CHARACTER '8'
TERMINATING_SYMBOL ;
VTYPE boolean
IDENTIFIER __cc
ASSIGNMENT_OPERATOR =
BOOLEAN_STRING true
TERMINATING_SYMBOL ;
VTYPE String
IDENTIFIER d__d_0
ASSIGNMENT_OPERATOR =
LITERAL_STRING "Hello World 123"
TERMINATING_SYMBOL ;
VTYPE char
IDENTIFIER if_123if
ASSIGNMENT_OPERATOR =
SINGLE CHARACTER ' '
TERMINATING_SYMBOL ;
VTYPE int
IDENTIFIER _123if0
ASSIGNMENT_OPERATOR =
SIGNED_INTEGER -1
ARITHMETIC OPERATOR -
SIGNED_INTEGER 0
TERMINATING_SYMBOL ;
VTYPE int
IDENTIFIER publice
ASSIGNMENT_OPERATOR =
SIGNED_INTEGER -10
TERMINATING_SYMBOL ;
KEYWORD if
LEFT_PAREN (
BOOLEAN_STRING true
RIGHT_PAREN )
LEFT_BRACE {
IDENTIFIER _aa_a
ASSIGNMENT_OPERATOR =
SIGNED_INTEGER 3923
ARITHMETIC OPERATOR *
SIGNED_INTEGER 41
ARITHMETIC OPERATOR -
SIGNED_INTEGER -1
ARITHMETIC OPERATOR -
SIGNED_INTEGER -1
ARITHMETIC OPERATOR -
SIGNED_INTEGER 1
ARITHMETIC OPERATOR -
SIGNED_INTEGER 1
ARITHMETIC OPERATOR /
SIGNED_INTEGER 10
ARITHMETIC OPERATOR +
SIGNED_INTEGER 2
TERMINATING_SYMBOL ;
RIGHT_BRACE }
KEYWORD else
LEFT_BRACE {
IDENTIFIER b_b123
ASSIGNMENT_OPERATOR =
SINGLE CHARACTER '3'
TERMINATING_SYMBOL ;
RIGHT_BRACE }
KEYWORD while
LEFT_PAREN (
BOOLEAN_STRING false
RIGHT_PAREN )
LEFT_BRACE {
IDENTIFIER __cc
ASSIGNMENT_OPERATOR =
BOOLEAN_STRING false
TERMINATING_SYMBOL ;
RIGHT_BRACE }
KEYWORD return
SIGNED_INTEGER 0
TERMINATING_SYMBOL ;
RIGHT_BRACE }
RIGHT_BRACE }