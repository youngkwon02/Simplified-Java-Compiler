<KEYWORD> public
<KEYWORD> class
<IDENTIFIER> test
<LEFT_BRACE> {
<KEYWORD> public
<KEYWORD> static
<VTYPE> int
<KEYWORD> main
<LEFT_PAREN> (
<VTYPE> String
<LEFT_BRANKET> [
<RIGHT_BRANKET> ]
<IDENTIFIER> args
<RIGHT_PAREN> )
<LEFT_BRACE> {
<VTYPE> int
<IDENTIFIER> _aa_a
<ASSIGNMENT_OPERATOR> =
<SIGNED_INTEGER> 0
<TERMINATING_SYMBOL> ;
<VTYPE> char
<IDENTIFIER> b_b123
<ASSIGNMENT_OPERATOR> =
<SINGLE_CHARACTER> '8'
<TERMINATING_SYMBOL> ;
<VTYPE> boolean
<IDENTIFIER> __cc
<ASSIGNMENT_OPERATOR> =
<BOOLEAN_STRING> true
<TERMINATING_SYMBOL> ;
<VTYPE> String
<IDENTIFIER> d__d_0
<ASSIGNMENT_OPERATOR> =
<LITERAL_STRING> "Hello World 123"
<TERMINATING_SYMBOL> ;
<VTYPE> char
<IDENTIFIER> if_123if
<ASSIGNMENT_OPERATOR> =
<SINGLE_CHARACTER> ' '
<TERMINATING_SYMBOL> ;
<VTYPE> int
<IDENTIFIER> _123if0
<ASSIGNMENT_OPERATOR> =
<SIGNED_INTEGER> -1
<ARITHMETIC_OPERATOR> -
<SIGNED_INTEGER> 0
<TERMINATING_SYMBOL> ;
<VTYPE> int
<LEFT_BRANKET> [
<RIGHT_BRANKET> ]
<IDENTIFIER> publice
<ASSIGNMENT_OPERATOR> =
<LEFT_BRACE> {
<SIGNED_INTEGER> 100
<COMMA> ,
<SIGNED_INTEGER> -10
<COMMA> ,
<SIGNED_INTEGER> 2
<RIGHT_BRACE> }
<TERMINATING_SYMBOL> ;
<KEYWORD> if
<LEFT_PAREN> (
<IDENTIFIER> _aa_a
<COMPARISON_OPERATOR> <=
<SIGNED_INTEGER> 0
<RIGHT_PAREN> )
<LEFT_BRACE> {
<IDENTIFIER> _aa_a
<ASSIGNMENT_OPERATOR> =
<SIGNED_INTEGER> 3923
<ARITHMETIC_OPERATOR> *
<SIGNED_INTEGER> 41
<ARITHMETIC_OPERATOR> -
<SIGNED_INTEGER> -1
<ARITHMETIC_OPERATOR> -
<SIGNED_INTEGER> -1
<ARITHMETIC_OPERATOR> -
<SIGNED_INTEGER> 1
<ARITHMETIC_OPERATOR> -
<SIGNED_INTEGER> 1
<ARITHMETIC_OPERATOR> /
<SIGNED_INTEGER> 10
<ARITHMETIC_OPERATOR> +
<SIGNED_INTEGER> 2
<TERMINATING_SYMBOL> ;
<RIGHT_BRACE> }
<KEYWORD> else
<KEYWORD> if
<LEFT_PAREN> (
<IDENTIFIER> _aa_a
<COMPARISON_OPERATOR> ==
<SIGNED_INTEGER> 0
<RIGHT_PAREN> )
<LEFT_BRACE> {
<IDENTIFIER> b_b123
<ASSIGNMENT_OPERATOR> =
<SINGLE_CHARACTER> '3'
<TERMINATING_SYMBOL> ;
<RIGHT_BRACE> }
<KEYWORD> while
<LEFT_PAREN> (
<IDENTIFIER> __cc
<RIGHT_PAREN> )
<LEFT_BRACE> {
<IDENTIFIER> __cc
<ASSIGNMENT_OPERATOR> =
<BOOLEAN_STRING> false
<COMPARISON_OPERATOR> !=
<BOOLEAN_STRING> false
<TERMINATING_SYMBOL> ;
<RIGHT_BRACE> }
<KEYWORD> return
<SIGNED_INTEGER> 0
<TERMINATING_SYMBOL> ;
<RIGHT_BRACE> }
<RIGHT_BRACE> }
